# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import functions
import variables
import utilities


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(767, 584)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(40, 20, 681, 501))
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.labelOutput = QtWidgets.QLabel(self.tab)
        self.labelOutput.setGeometry(QtCore.QRect(90, 350, 481, 81))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.labelOutput.setFont(font)
        self.labelOutput.setText("")
        self.labelOutput.setAlignment(QtCore.Qt.AlignCenter)
        self.labelOutput.setObjectName("labelOutput")
        self.loadButton = QtWidgets.QPushButton(self.tab)
        self.loadButton.setGeometry(QtCore.QRect(310, 230, 101, 51))
        self.loadButton.setObjectName("loadButton")
        self.labelSrc = QtWidgets.QLabel(self.tab)
        self.labelSrc.setGeometry(QtCore.QRect(90, 30, 91, 31))
        self.labelSrc.setObjectName("labelSrc")
        self.textSrc = QtWidgets.QTextEdit(self.tab)
        self.textSrc.setGeometry(QtCore.QRect(180, 40, 391, 31))
        self.textSrc.setObjectName("textSrc")
        self.textDest = QtWidgets.QTextEdit(self.tab)
        self.textDest.setGeometry(QtCore.QRect(180, 80, 391, 31))
        self.textDest.setObjectName("textDest")
        self.labelDst = QtWidgets.QLabel(self.tab)
        self.labelDst.setGeometry(QtCore.QRect(90, 70, 91, 31))
        self.labelDst.setObjectName("labelDst")
        self.labelCategories = QtWidgets.QLabel(self.tab)
        self.labelCategories.setGeometry(QtCore.QRect(90, 110, 91, 31))
        self.labelCategories.setAlignment(QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.labelCategories.setObjectName("labelCategories")
        self.textCategories = QtWidgets.QTextEdit(self.tab)
        self.textCategories.setGeometry(QtCore.QRect(180, 120, 391, 81))
        self.textCategories.setObjectName("textCategories")
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.previewLabel = QtWidgets.QLabel(self.tab_2)
        self.previewLabel.setGeometry(QtCore.QRect(30, 30, 341, 341))
        self.previewLabel.setText("")
        self.previewLabel.setScaledContents(True)
        self.previewLabel.setObjectName("previewLabel")
        self.groupBox = QtWidgets.QGroupBox(self.tab_2)
        self.groupBox.setGeometry(QtCore.QRect(420, 20, 201, 201))
        self.groupBox.setObjectName("groupBox")
        # self.label1 = QtWidgets.QRadioButton(self.groupBox)
        # self.label1.setGeometry(QtCore.QRect(30, 30, 82, 17))
        # self.label1.setObjectName("label1")
        # self.label2 = QtWidgets.QRadioButton(self.groupBox)
        # self.label2.setGeometry(QtCore.QRect(30, 60, 82, 17))
        # self.label2.setObjectName("label2")
        # self.label3 = QtWidgets.QRadioButton(self.groupBox)
        # self.label3.setGeometry(QtCore.QRect(30, 90, 82, 17))
        # self.label3.setObjectName("label3")
        self.otherCategoryLabel = QtWidgets.QTextEdit(self.groupBox)
        # self.otherCategoryLabel.setGeometry(QtCore.QRect(50, 120, 121, 31))
        self.otherCategoryLabel.setObjectName("otherCategoryLabel")
        self.saveButton = QtWidgets.QPushButton(self.tab_2)
        # self.saveButton.setGeometry(QtCore.QRect(460, 240, 75, 23))
        self.saveButton.setObjectName("saveButton")
        self.prevButton = QtWidgets.QPushButton(self.tab_2)
        self.prevButton.setGeometry(QtCore.QRect(80, 400, 111, 41))
        self.prevButton.setObjectName("prevButton")
        self.nextButton = QtWidgets.QPushButton(self.tab_2)
        self.nextButton.setGeometry(QtCore.QRect(220, 400, 111, 41))
        self.nextButton.setObjectName("nextButton")
        self.tabWidget.addTab(self.tab_2, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 767, 21))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionClose = QtWidgets.QAction(MainWindow)
        self.actionClose.setShortcut(QtGui.QKeySequence("Ctrl+Q"))
        self.actionClose.triggered.connect(self.exit_app)
        self.actionClose.setObjectName("actionClose")
        self.menuFile.addAction(self.actionClose)
        # Enter
        self.actionEnter = QtWidgets.QAction(MainWindow)
        self.actionEnter.setShortcut(QtGui.QKeySequence("Return"))
        self.actionEnter.triggered.connect(self.clickSave)
        self.actionEnter.setObjectName("actionEnter")
        self.menuFile.addAction(self.actionEnter)
        # Prev
        self.actionPrev = QtWidgets.QAction(MainWindow)
        self.actionPrev.setShortcut(QtGui.QKeySequence('Left'))
        self.actionPrev.triggered.connect(lambda: functions.clickPrev(self.previewLabel))
        self.actionPrev.setObjectName("actionPrev")
        self.menuFile.addAction(self.actionPrev)
        self.menubar.addAction(self.menuFile.menuAction())
        # Next
        self.actionNext = QtWidgets.QAction(MainWindow)
        self.actionNext.setShortcut(QtGui.QKeySequence('Right'))
        self.actionNext.triggered.connect(lambda: functions.clickNext(self.previewLabel))
        self.actionNext.setObjectName("actionNext")
        self.menuFile.addAction(self.actionNext)
        # Up
        self.actionUp = QtWidgets.QAction(MainWindow)
        self.actionUp.setShortcut(QtGui.QKeySequence('Up'))
        self.actionUp.triggered.connect(self.clickUp)
        self.actionUp.setObjectName("actionUp")
        self.menuFile.addAction(self.actionUp)
        # Down
        self.actionDown = QtWidgets.QAction(MainWindow)
        self.actionDown.setShortcut(QtGui.QKeySequence('Down'))
        self.actionDown.triggered.connect(self.clickDown)
        self.actionDown.setObjectName("actionDown")
        self.menuFile.addAction(self.actionDown)
        self.menubar.addAction(self.menuFile.menuAction())

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # add functions here
        self.loadButton.clicked.connect(self.clickMe)
        self.prevButton.clicked.connect(lambda: functions.clickPrev(self.previewLabel))
        self.nextButton.clicked.connect(lambda: functions.clickNext(self.previewLabel))
        self.saveButton.clicked.connect(self.clickSave)
        # self.label1.clicked.connect(lambda: functions.clickRadioButton(0))
        # self.label2.clicked.connect(lambda: functions.clickRadioButton(1))
        # self.label3.clicked.connect(lambda: functions.clickRadioButton(2))

    def exit_app(self):
        print("Close")
        self.close()

    def clickSave(self):
        print("clickSave")
        variables.OTHER_CATEGORY_LABEL = self.otherCategoryLabel.toPlainText()
        functions.clickSave(self.previewLabel)

    def clickMe(self):
        variables.SRC_DIR = self.textSrc.toPlainText()
        variables.DEST_DIR = self.textDest.toPlainText()
        variables.IMAGE_LIST = utilities.getImageList(variables.SRC_DIR)
        variables.TOTAL_IMAGES = len(variables.IMAGE_LIST)
        variables.LABELS_LIST = self.textCategories.toPlainText().split(",")
        variables.TOTAL_LABELS = len(variables.LABELS_LIST)
        self.addCategoryLabels()
        functions.clickMe(self.labelOutput, self.previewLabel)

    def addCategoryLabels(self):
        self.groupBox.setGeometry(QtCore.QRect(420, 20, 201, 80 + variables.TOTAL_LABELS * 30))
        height = 30
        self.categoryLabels = []
        for i in range(variables.TOTAL_LABELS):
            label = variables.LABELS_LIST[i]
            labelWidget = QtWidgets.QRadioButton(self.groupBox)
            labelWidget.setGeometry(QtCore.QRect(30, height, 82, 17))
            labelWidget.setObjectName(f"label{i}")
            labelWidget.clicked.connect(self.clickRadioButton)
            labelWidget.setText(label)
            self.categoryLabels.append(labelWidget)
            height += 30
        self.otherCategoryLabel.setGeometry(QtCore.QRect(50, height, 121, 31))
        height += 100
        self.saveButton.setGeometry(QtCore.QRect(460, height, 75, 23))

    def clickUp(self):
        if variables.TOTAL_LABELS <= 1:
            return
        curr = 0
        for i in range(variables.TOTAL_LABELS):
            if self.categoryLabels[i].isChecked():
                curr = i
                break
        self.categoryLabels[curr].setChecked(False)
        curr = (curr - 1 + variables.TOTAL_LABELS) % variables.TOTAL_LABELS
        self.categoryLabels[curr].setChecked(True)
        variables.CURR_SELECTED_LABEL_INDEX = curr

    def clickDown(self):
        if variables.TOTAL_LABELS <= 1:
            return
        curr = 0
        for i in range(variables.TOTAL_LABELS):
            if self.categoryLabels[i].isChecked():
                curr = i
                break
        self.categoryLabels[curr].setChecked(False)
        curr = (curr + 1) % variables.TOTAL_LABELS
        self.categoryLabels[curr].setChecked(True)
        variables.CURR_SELECTED_LABEL_INDEX = curr

    def clickRadioButton(self):
        for i in range(variables.TOTAL_LABELS):
            if self.categoryLabels[i].isChecked():
                variables.CURR_SELECTED_LABEL_INDEX = i
                break

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.loadButton.setText(_translate("MainWindow", "Load"))
        self.labelSrc.setText(_translate("MainWindow", "SRC_FOLDER"))
        self.textSrc.setPlaceholderText(
            _translate("MainWindow", "Enter source folder in a format suitable for your OS"))
        self.textDest.setPlaceholderText(
            _translate("MainWindow", "Enter destination folder in a format suitable for your OS"))
        self.labelDst.setText(_translate("MainWindow", "DEST_FOLDER"))
        self.labelCategories.setText(_translate("MainWindow", "CATEGORIES"))
        self.textCategories.setPlaceholderText(_translate("MainWindow", "Enter categories separated by comma (,)"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Tab 1"))
        self.groupBox.setTitle(_translate("MainWindow", "Labels"))
        for i in range(variables.TOTAL_LABELS):
            label = variables.LABELS_LIST[i]
            print(label)
            self.categoryLabels[i].setText(_translate("MainWindow", label))
        # self.label1.setText(_translate("MainWindow", "Tableware"))
        # self.label2.setText(_translate("MainWindow", "Coffee Cup"))
        # self.label3.setText(_translate("MainWindow", "Others"))
        self.saveButton.setText(_translate("MainWindow", "SAVE"))
        self.prevButton.setText(_translate("MainWindow", "PREV"))
        self.nextButton.setText(_translate("MainWindow", "NEXT"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Tab 2"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.actionClose.setText(_translate("MainWindow", "Close"))
        self.actionClose.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        # Enter
        self.actionEnter.setText(_translate("MainWindow", "Enter"))
        self.actionEnter.setShortcut(_translate("MainWindow", "Return"))
        # Prev
        self.actionPrev.setText(_translate("MainWindow", "Prev"))
        self.actionPrev.setShortcut(_translate("MainWindow", 'Left'))
        # Next
        self.actionNext.setText(_translate("MainWindow", "Next"))
        self.actionNext.setShortcut(_translate("MainWindow", 'Right'))
        # Up
        self.actionUp.setText(_translate("MainWindow", "Up"))
        self.actionUp.setShortcut(_translate("MainWindow", 'Up'))
        # Down
        self.actionDown.setText(_translate("MainWindow", "Down"))
        self.actionDown.setShortcut(_translate("MainWindow", 'Down'))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
